# -*- coding: utf-8 -*-
"""Task_1_big_data_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xsxNvB3oiqkyV1reucYZGxlRTmg0mjgH
"""

pip install pyspark

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, count, avg, desc

spark = SparkSession.builder \
    .appName("Big Data Analysis Internship Task") \
    .getOrCreate()

df = spark.read.csv("/content/Walmart_Sales.csv", header=True, inferSchema=True)
df.printSchema()
df.show(5)

df.describe().show()  # summary statistics
df.columns            # list of columns
df.count()            # number of rows
df.dtypes             # data types

from pyspark.sql.functions import isnan, when, count

df.select([count(when(col(c).isNull(), c)).alias(c) for c in df.columns]).show()

df.groupBy("Temperature").agg(
    count("*").alias("Total_Transactions"),
    avg("Weekly_Sales").alias("Average_Weekly_Sales")
).orderBy(desc("Total_Transactions")).show()

df.filter(col("Weekly_Sales") > 10000).show()

df.groupBy("Fuel_Price").agg(count("*").alias("Sales_Count")) \
  .orderBy(desc("Sales_Count")).show(10)

# draw a bar chart
import matplotlib.pyplot as plt
import pandas as pd
from pyspark.sql.functions import pandas_udf
from pyspark.sql.types import StringType

# Convert Spark DataFrame to Pandas DataFrame for plotting
sales_by_store_df = df.groupBy("Store").agg({"Weekly_Sales": "avg"}).orderBy("Store").toPandas()

# Create a bar chart of average weekly sales by store
plt.figure(figsize=(12, 6))
plt.bar(sales_by_store_df["Store"], sales_by_store_df["avg(Weekly_Sales)"])
plt.xlabel("Store")
plt.ylabel("Average Weekly Sales")
plt.title("Average Weekly Sales by Store")
plt.show()

# Create a scatter plot of Weekly Sales vs. Temperature
plt.figure(figsize=(10, 6))
plt.scatter(df.select("Temperature").toPandas(), df.select("Weekly_Sales").toPandas(), alpha=0.5)
plt.xlabel("Temperature")
plt.ylabel("Weekly Sales")
plt.title("Weekly Sales vs. Temperature")
plt.show()

# Calculate average weekly sales for holidays and non-holidays
holiday_sales = df.filter(col("Holiday_Flag") == 1).agg(avg("Weekly_Sales")).collect()[0][0]
non_holiday_sales = df.filter(col("Holiday_Flag") == 0).agg(avg("Weekly_Sales")).collect()[0][0]

# Create a bar chart
labels = ['Holiday', 'Non-Holiday']
averages = [holiday_sales, non_holiday_sales]

plt.figure(figsize=(8, 5))
plt.bar(labels, averages, color=['red', 'blue'])
plt.ylabel('Average Weekly Sales')
plt.title('Average Weekly Sales on Holidays vs. Non-Holidays')
plt.show()